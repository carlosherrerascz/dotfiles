[
    // Thanks to theol0403 for 99% of these bindings! 
    // https://github.com/vscode-neovim/vscode-neovim/issues/457#issuecomment-750746514
    

    // Sidebar actions
    {
        "key": "g g",
        "command": "list.focusFirst",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+g",
        "command": "list.focusLast",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "l",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "o",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "list.focusPageUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "list.focusPageDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "/",
        "command": "list.toggleKeyboardNavigation",
        "when": "listFocus && !inputFocus && listSupportsKeyboardNavigation"
    },
    {
        "key": "escape",
        "command": "list.toggleKeyboardNavigation",
        "when": "listFocus && inputFocus && listSupportsKeyboardNavigation"
    },
    
    // File explorer actions
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "v",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "n",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+n",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
    },

    // panel nav
    {
        "key": "ctrl+b j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "ctrl+b k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl+b h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "ctrl+b l",
        "command": "workbench.action.navigateRight"
    },

    // sidebar control
    {
        "key": "ctrl+b",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b b", // focus explorer
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+b b", // exit sidebar
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "explorerViewletFocus"
    },
    {
        "key": "escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+b c", // toggle sidebar
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b f", // focus file in explorer
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "ctrl+b r", // replace project
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+b g", // replace file
        "command": "editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+b e", // extensions
        "command": "workbench.view.extensions"
    },
    {
        "key": "ctrl+b a", // activity bar toggle
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "ctrl+b s", // status bar toggle
        "command": "workbench.action.toggleStatusbarVisibility"
    },
    {
        "key": "ctrl+b o", // focus outline
        "command": "outline.focus"
    },
    {
        "key": "ctrl+n", // activity bar nav
        "command": "workbench.action.nextSideBarView",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.previousSideBarView",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+b m",
        "command": "workbench.action.maximizeEditor",
    },

    // NAVIGATION

    // Panel/terminal actions
    {
        "key": "ctrl+shift+a",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    // Toggle panel on and off
    {
        "key": "alt+t",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.killInstance",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && !dirtyDiffVisible && !findWidgetVisible && !inReferenceSearchEditor && !markersNavigationVisible && !notebookCellFocused && !notificationCenterVisible && !parameterHintsVisible && !referenceSearchVisible && neovim.mode == 'normal'"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.init && neovim.mode != 'normal'"
    },
    {
        "key": "ctrl+h",
        "command": "-vscode-neovim.send-cmdline",
        "when": "neovim.mode == 'cmdline'"
    },
    {
        "key": "ctrl+j",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+h",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+h",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+v",
        "command": "-editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+v",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+s shift+\\",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+s \\",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
]